<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
						http://www.springframework.org/schema/mvc/spring-mvc.xsd
						http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context.xsd">


	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />
    <beans:bean name="/hello" class="com.blogspot.sunitkatkar.HelloController">

    </beans:bean>

    <beans:bean id="custom" class="com.blogspot.adapter.CustomAdapter">

    </beans:bean>

    <!--Controller,MultiActionController 继承和注解的支持 start-->
    <beans:bean class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping"></beans:bean>

    <beans:bean class="com.blogspot.sunitkatkar.MultiController"/>
    <!--end-->

    <beans:bean name="/custom" class="com.blogspot.sunitkatkar.CustomController">
    </beans:bean>
    <beans:alias alias="/custom2" name="/custom"></beans:alias>

    <beans:bean id="helloInterceptor" class="com.blogspot.interceptor.HelloInterceptor">

    </beans:bean>

    <beans:bean id="simple" name="" class="com.blogspot.sunitkatkar.SimpleController"/>

    <beans:bean id="simple2" class="com.blogspot.sunitkatkar.Simple2Controller"></beans:bean>



    <beans:bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
        <!--<beans:property name="mappings">-->
            <!--<beans:props>-->
                <!--<beans:prop key="/simple">simple</beans:prop>-->
            <!--</beans:props>-->
        <!--</beans:property>-->
        <beans:property name="mappings">
            <beans:bean class="org.springframework.beans.factory.config.PropertiesFactoryBean">
                <beans:property name="location" value="classpath:url.properties" />
            </beans:bean>
        </beans:property>
        <beans:property name="urlMap">
            <beans:map>
                <beans:entry key="/simple2" value-ref="simple2"/>
            </beans:map>
        </beans:property>

    </beans:bean>
    
    <mvc:interceptors>
        <mvc:interceptor >
            <mvc:mapping path="/hello"/>
            <beans:ref bean="helloInterceptor" ></beans:ref>
        </mvc:interceptor>
    </mvc:interceptors>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory The resolvers 
		help in adding either a version number or a hash to the javascript, css, 
		image urls to prevent browser caching -->
	<mvc:resources mapping="/resources/**" location="/resources/">
		<mvc:resource-chain resource-cache="true"
			auto-registration="true">
			<mvc:resolvers>
				<mvc:version-resolver>
					<!--<mvc:content-version-strategy-->
						<!--patterns="/**" />-->
					 <mvc:fixed-version-strategy version="1.1.1" patterns="/**"/>
				</mvc:version-resolver>
			</mvc:resolvers>
		</mvc:resource-chain>
	</mvc:resources>

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan base-package="com.blogspot" />
</beans:beans>
